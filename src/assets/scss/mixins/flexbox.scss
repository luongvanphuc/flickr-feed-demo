// --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
.flexbox {
  @include flexbox;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}
.flex-row {
  @include flex-direction(row);
}
.flex-row-reverse {
  @include flex-direction(row-reverse);
}
.flex-column {
  @include flex-direction(column);
}
.flex-column-reverse {
  @include flex-direction(column-reverse);
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  -moz-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}
.flex-nowrap {
  @include flex-wrap(nowrap);
}
.flex-wrap {
  @include flex-wrap(wrap);
}
.flex-wrap-reverse {
  @include flex-wrap(wrap-reverse);
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
  -moz-flex-flow: $flow;
  -ms-flex-flow: $flow;
  flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
  -moz-flex-basis: $width;
  -ms-flex-basis: $width;
  flex-basis: $width;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
  -moz-flex-grow: $grow;
  -ms-flex-grow: $grow;
  flex-grow: $grow;
}
.flex-grow {
  @include flex-grow(1);
}

@mixin flex-grow-auto() {
  @include flex-grow(1);
  @include flex-basis(0);
  max-width: 100%;
}
.flex-grow-auto {
  @include flex-grow-auto;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
  -moz-flex-shrink: $shrink;
  -ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;
}
.justify-content-start {
  @include justify-content(flex-start);
}
.justify-content-end {
  @include justify-content(flex-end);
}
.justify-content-center {
  @include justify-content(center);
}
.justify-content-space-between {
  @include justify-content(space-between);
}
.justify-content-space-around {
  @include justify-content(space-around);
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -webkit-align-content: $align;
  -moz-align-content: $align;
  -ms-align-content: $align;
  align-content: $align;
}
.align-content-start {
  @include align-content(flex-start);
}
.align-content-end {
  @include align-content(flex-end);
}
.align-content-center {
  @include align-content(center);
}
.align-content-space-between {
  @include align-content(space-between);
}
.align-content-space-around {
  @include align-content(space-around);
}
.align-content-stretch {
  @include align-content(stretch);
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  align-items: $align;
}
.align-items-start {
  @include align-items(flex-start);
}
.align-items-end {
  @include align-items(flex-end);
}
.align-items-center {
  @include align-items(center);
}
.align-items-baseline {
  @include align-items(baseline);
}
.align-items-stretch {
  @include align-items(stretch);
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -webkit-align-self: $align;
  -moz-align-self: $align;
  -ms-align-self: $align;
  align-self: $align;
}
.align-self-auto {
  @include align-items(auto);
}
.align-self-start {
  @include align-items(flex-start);
}
.align-self-end {
  @include align-items(flex-end);
}
.align-self-center {
  @include align-items(center);
}
.align-self-baseline {
  @include align-items(baseline);
}
.align-self-stretch {
  @include align-items(stretch);
}
